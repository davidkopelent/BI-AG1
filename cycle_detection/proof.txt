Důkaz konečnosti
Konečný počet uzlů a hran:

Vzhledem k tomu, že graf je reprezentován jako konečná množina uzlů a hran, má každý uzel pouze konečný počet sousedů. Celkový počet vrcholů 
𝑉
V a hran 
𝐸
E je konečný.
Stavy uzlů:

Každý uzel má jeden ze tří stavů (State):
FRESH: Uzel nebyl navštíven.
OPEN: Uzel je navštívený, ale jeho DFS průchod není dokončen.
CLOSED: DFS průchod uzlem je dokončen.
Změna stavu uzlu je jednosměrná: FRESH → OPEN → CLOSED. Po dosažení stavu CLOSED se stav uzlu již nezmění, což eliminuje možnost nekonečných opakovaných změn stavů.
Rekurzivní volání a jeho ohraničení:

Funkce dfs se volá rekurzivně pro každý soused uzlu pouze v případě, že uzel je ve stavu FRESH nebo OPEN. Pokud se zjistí, že uzel je ve stavu OPEN, detekuje se cyklus a algoritmus okamžitě skončí, což potvrzuje jeho konečnost v případě cyklu.
Když se volání dokončí pro všechny sousedy uzlu, uzel se nastaví na stav CLOSED, což znamená, že DFS pro tento uzel a jeho potomky je kompletní a nebude již znovu navštíveno.
Indukční důkaz konečnosti pro každý uzel:

Induktivní hypotéza: Předpokládejme, že DFS pro uzel 
𝑣
v se správně provede a všechny sousední uzly se prozkoumají (dokud nejsou CLOSED nebo se nenajde cyklus).
Základní případ: Pro uzel bez sousedů (list) je DFS dokončena ihned, protože neexistují žádná rekurzivní volání. Uzel se nastaví na CLOSED.
Induktivní krok: Pokud DFS dokončí průzkum sousedů uzlu, nastaví uzel na CLOSED a žádný z uzlů ve stavu CLOSED se nebude prozkoumávat znovu.
Maximální počet návštěv každého uzlu:

Každý uzel je během DFS navštívený nejvýše jednou v každém rekurzivním volání.
Po nastavení na CLOSED se uzel již nepoužije jako výchozí bod pro DFS a ani se pro něj nevytváří nové rekurzivní volání, což omezí maximální počet návštěv pro každý uzel na jedno rekurzivní volání.
Důsledek:

Díky tomu, že graf má konečný počet uzlů a hran a každé DFS volání vede k jednosměrnému průchodu přes sousedy (s jednosměrnou změnou stavu FRESH → OPEN → CLOSED), DFS skončí po konečném počtu kroků.
Tím je formálně prokázána konečnost algoritmu.
